-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."SequelizeMeta"
(
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "SequelizeMeta_pkey" PRIMARY KEY (name)
);

CREATE TABLE IF NOT EXISTS public.currencys
(
    id integer NOT NULL DEFAULT nextval('currencys_id_seq'::regclass),
    "walletId" integer NOT NULL,
    currency character varying(3) COLLATE pg_catalog."default" NOT NULL,
    amount double precision NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "createdBy" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedBy" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT currencys_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."exchangeRates"
(
    id integer NOT NULL DEFAULT nextval('"exchangeRates_id_seq"'::regclass),
    "baseCurrency" character varying(3) COLLATE pg_catalog."default" NOT NULL,
    "exhangeCurrency" character varying(3) COLLATE pg_catalog."default" NOT NULL,
    rate real NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT "exchangeRates_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.transactions
(
    id integer NOT NULL DEFAULT nextval('transactions_id_seq'::regclass),
    "walletId" integer NOT NULL,
    "debitId" integer NOT NULL DEFAULT nextval('"transactions_debitId_seq"'::regclass),
    "debitCurrency" integer NOT NULL,
    "debitAmount" double precision NOT NULL,
    "creditId" integer NOT NULL DEFAULT nextval('"transactions_creditId_seq"'::regclass),
    "creditCurrency" integer NOT NULL,
    "creditAmount" double precision NOT NULL,
    description character varying(255) COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "createdBy" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedBy" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT transactions_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id integer NOT NULL DEFAULT nextval('users_id_seq'::regclass),
    username character varying(20) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_name_key UNIQUE (name),
    CONSTRAINT users_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.wallets
(
    id integer NOT NULL DEFAULT nextval('wallets_id_seq'::regclass),
    "userId" integer NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "updatedAt" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT wallets_pkey PRIMARY KEY (id),
    CONSTRAINT "wallets_userId_key" UNIQUE ("userId")
);

ALTER TABLE IF EXISTS public.currencys
    ADD CONSTRAINT "currencys_walletId_fkey" FOREIGN KEY ("walletId")
    REFERENCES public.wallets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT "transactions_creditCurrency_fkey" FOREIGN KEY ("creditCurrency")
    REFERENCES public."exchangeRates" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT "transactions_debitCurrency_fkey" FOREIGN KEY ("debitCurrency")
    REFERENCES public."exchangeRates" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transactions
    ADD CONSTRAINT "transactions_walletId_fkey" FOREIGN KEY ("walletId")
    REFERENCES public.wallets (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.wallets
    ADD CONSTRAINT "wallets_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public.users (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;
CREATE INDEX IF NOT EXISTS "wallets_userId_key"
    ON public.wallets("userId");

END;